<?xml version="1.0" encoding="utf-8" ?>
<samples>
  <sample id="gettingstarted">
    <title>Getting Started</title>
    <description>Steps for getting started with FlexChart in WinForms applications:
      
1. Add references to C1.Win.FlexChart assembly.
2. Add FlexChart to a form and add needed series.
3. Bind the data to FlexChart.
    </description>
  </sample>
  <sample id="charttypes">
    <title>Chart Types</title>
    <description>FlexChart control has three properties that allow you to customize the chart type:

• [b]chartType[/b]: Selects the default chart type to be used for all series objects. Individual series objects can override this
• [b]stacking[/b]: Determines whether series objects are plotted independently, stacked, or stacked so their sum is 100%
• [b]rotated[/b]: Flips the X and Y axes so X becomes vertical and Y horizontal
    </description>
  </sample>
  <sample id="mixedcharttypes">
    <title>Mixed Chart Types</title>
    <description>You can use different chart types for each chart series by setting the [b]chartType[/b] property on the series itself. This overrides the chart's default chart type.

In the example below, the chart's [b]chartType[/b] property is set to [b]Column[/b], but the [b]Sales[/b] series overrides that to use the [b]LineSymbols[/b] chart type.
    </description>   
  </sample>
  <sample id="legendandtitles">
    <title>Legend and Titles</title>
    <description>Customize the location of the chart legend with the [b]Legend[/b] properties. Add titles to your charts with the [b]Header[/b], [b]Footer[/b], and axis [b]Title[/b] properties.</description>
  </sample>
  <sample id="tooltips">
    <title>Tooltips</title>
    <description>FlexChart has built-in support for tooltips. By default, the control displays tooltips when the user touches or hovers the mouse on a data point.

The tooltip content is generated using a template that may contain the following parameters:

• [b]seriesName[/b]: Name of the series that contains the chart element
• [b]pointIndex[/b]: Index of the chart element within the series
• [b]x[/b]: X-value of the chart element
• [b]y[/b]: Y-value of the chart element
    </description>
  </sample>
  <sample id="stylingseries">
    <title>Styling Series</title>
    <description>FlexChart automatically picks colors for each series based on a default palette, which you can override by setting the [b]Palette[/b] property. But you can also override the default settings by setting the [b]Style[/b] property of any series to an object that specifies styling attributes, including [b]Fill[/b], [b]Stroke[/b], [b]StrokeWidth[/b], and so on.</description>
  </sample>
  <sample id="customizingaxes">
    <title>Customizing Axes</title>
    <description>Use axis properties to customize the chart's axes, including ranges (minimum and maximum), label format, tickmark spacing, and gridlines.

The AxisX and AxisY class have boolean properties that allow you to turn features on or off ([b]AxisLine[/b], [b]Labels[/b], [b]MajorTickMarks[/b], and [b]MajorGrid[/b])
    </description>
  </sample>
  <sample id="selectionmodes">
    <title>Selection Modes</title>
    <description>FlexChart allows you to select series or data points by clicking or touching them. Use the [b]SelectionMode[/b] property to specify whether you want to allow selection by series, by data point, or no selection at all (selection is off by default).</description>
  </sample>
  <sample id="toggle">
    <title>Toggle</title>
    <description>The [b]Series[/b] class has a [b]Visibility[/b] property that allows you to determine whether a series should be shown in the chart; in the legend; only in the legend; or completely hidden.

This sample shows how you can use the [b]Visibility[/b] property to toggle the visibility of a series using two methods:

1. Clicking on legend entries: The chart directive sets the chart's [b]LegendToggle[/b] property to true, which toggles the [b]Visibility[/b] property of a series when its legend entry is clicked.
2. Using checkboxes: The form binds input controls directly to the [b]Visibility[/b] property of each series.
    </description>
  </sample>
  <sample id="dynamic">
    <title>Dynamic</title>
    <description>You can use [b]INotifyCollectionChanged[/b] data collections, so any changes you make to the data source are automatically reflected in the chart.

In this sample, we use a timer to add items to the data source, discarding old items to keep the total count at 20. The result is a dynamic chart that scrolls as new data arrives.
    </description>
  </sample>
  <sample id="funnel">
    <title>Funnel Charts</title>
    <description>The example below shows you how to create and customize Funnel Chart.</description>
  </sample>
</samples>