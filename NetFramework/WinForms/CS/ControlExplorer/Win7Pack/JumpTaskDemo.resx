<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="signInDialog.MainCustomIcon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABAQEAgQEBAgEBAQPBAQEEwQEBBAEBAQIBAQEAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAQEBAMEBAQRBAQEKQQEBD4EBARFBAQEPwQEBCsEBAQSBAQEAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAEBAQBBAQEED8jFGJdMx2xaDgfyloxHL4qGhCTBQUEXgQEBDUEBAQQBAQEAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAVvPCB6ikso9aJUKv+0WCb/rFUn/4lJJPdBJRevBAQEVQQE
        BCEEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkE0qMqJaM/G5Zjr/vVom/8pfJ//daSn/2WUq/4BF
        Ju8WEAx2BAQEKwQEBAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClYDtbvoRl/7l6Wf+sUyX/ulkm/8hf
        J//YZCf/kEkl+y4cE4QEBAQmBAQEBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9uS1HKmH3/4ca3/7Jy
        Uf+yYDb/vmU2/8heJv+NSyf2KxsRYwQEBBYEBAQCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr3NSF7+J
        aczu2cz/79vR/+LBsf/esZn/wntW/5FMKLYQDAkjBAQEBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAuHxdLrqAYbLGkXbsxpF187d5WOigXTqfUi0dJgQEBAYEBAQBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAEBAQBDgwKCIxaQTaJVztJYDgmNAQEBBYEBAQOBAQEBAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAYEBAQdBAQEOgQEBEcEBARHBAQERAQEBDAEBAQRBAQEAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg0UmNHU+IalpOR/DYzQeyGc3H8xOKhixCwkHWQQE
        BB8EBAQDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACaUipzp184/7RbK/+6Wyj/wF4q/4BF
        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
</value>
  </data>
  <data name="c1SuperLabel1.Text" xml:space="preserve">
    <value>It's pretty easy to manipulate jump lists using the &lt;b&gt;C1TaskbarButton&lt;/b&gt; component. In this demo we add dynamic tasks to a jump list which change the overlay icon of the taskbar button. We also show a Windows dialog using &lt;b&gt;C1TaskDialog&lt;/b&gt; when the user selects a different task.&lt;br&gt;
&lt;br&gt;
Right-click this window's taskbar button to see the jump list.</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1dXZ3iIiJ+0tLSucAAAAyAAAADAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJGRkqaYmJv/OTg43gAA
        AGgAAABHAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIyNw3x8
        fP47OjqnAAAAHQAAAC0AAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACUlJfdaGZm+zw8O3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgICAS6KipO9WVlbzPj09JAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB5eXpvpKao+UhISOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAISEhJqVl5j/QkBAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAk5OUwICAgP89PTyeAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkpKPfbGtr+jw7O2QAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiIeDHru6uvNbW1rvOzs6PwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmJV8xsbG/U5O
        TeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALGw
        r6O6urn/R0dFygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAp6ejwqajov9FRUOsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AQPwAAPj8AAH8fEAB/H/gA///+Af///4P/8=
</value>
  </data>
</root>