//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TouchToolkitDemo.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TouchToolkitDemo.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Accnt {
            get {
                object obj = ResourceManager.GetObject("Accnt", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap airplane1 {
            get {
                object obj = ResourceManager.GetObject("airplane1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap airplane1_5 {
            get {
                object obj = ResourceManager.GetObject("airplane1_5", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap airplane2 {
            get {
                object obj = ResourceManager.GetObject("airplane2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap airplane2_5 {
            get {
                object obj = ResourceManager.GetObject("airplane2_5", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap airplane3 {
            get {
                object obj = ResourceManager.GetObject("airplane3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap airplane3_5 {
            get {
                object obj = ResourceManager.GetObject("airplane3_5", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap bg {
            get {
                object obj = ResourceManager.GetObject("bg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Bill {
            get {
                object obj = ResourceManager.GetObject("Bill", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Cat2 {
            get {
                object obj = ResourceManager.GetObject("Cat2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;NwindDataSet xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot;&gt;
        ///  &lt;xs:schema id=&quot;NwindDataSet&quot; targetNamespace=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:mstns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot; xmlns:msprop=&quot;urn:schemas-microsoft-com:xml-msprop&quot; attributeFormDefault=&quot;qualified&quot; elementFormDefault=&quot;qualified&quot;&gt;
        ///    &lt;xs:element nam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CategorySalesByMonth {
            get {
                return ResourceManager.GetString("CategorySalesByMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;NwindDataSet xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot;&gt;
        ///  &lt;xs:schema id=&quot;NwindDataSet&quot; targetNamespace=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:mstns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot; xmlns:msprop=&quot;urn:schemas-microsoft-com:xml-msprop&quot; attributeFormDefault=&quot;qualified&quot; elementFormDefault=&quot;qualified&quot;&gt;
        ///    &lt;xs:element nam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CategorySalesByQuarter {
            get {
                return ResourceManager.GetString("CategorySalesByQuarter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;NwindDataSet xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot;&gt;
        ///  &lt;xs:schema id=&quot;NwindDataSet&quot; targetNamespace=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:mstns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot; xmlns:msprop=&quot;urn:schemas-microsoft-com:xml-msprop&quot; attributeFormDefault=&quot;qualified&quot; elementFormDefault=&quot;qualified&quot;&gt;
        ///    &lt;xs:element nam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CategorySalesByYear {
            get {
                return ResourceManager.GetString("CategorySalesByYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Check {
            get {
                object obj = ResourceManager.GetObject("Check", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Cherry {
            get {
                object obj = ResourceManager.GetObject("Cherry", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ChooseColor {
            get {
                object obj = ResourceManager.GetObject("ChooseColor", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap cube {
            get {
                object obj = ResourceManager.GetObject("cube", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Cust {
            get {
                object obj = ResourceManager.GetObject("Cust", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CustomBackgroundForm {
            get {
                object obj = ResourceManager.GetObject("CustomBackgroundForm", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CustomBackgroundPreview {
            get {
                object obj = ResourceManager.GetObject("CustomBackgroundPreview", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Erase {
            get {
                object obj = ResourceManager.GetObject("Erase", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap F22 {
            get {
                object obj = ResourceManager.GetObject("F22", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Fill {
            get {
                object obj = ResourceManager.GetObject("Fill", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Find {
            get {
                object obj = ResourceManager.GetObject("Find", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Forest {
            get {
                object obj = ResourceManager.GetObject("Forest", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap fotter {
            get {
                object obj = ResourceManager.GetObject("fotter", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap header_b {
            get {
                object obj = ResourceManager.GetObject("header_b", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap header_g {
            get {
                object obj = ResourceManager.GetObject("header_g", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap InnerPanelLayoutMode1 {
            get {
                object obj = ResourceManager.GetObject("InnerPanelLayoutMode1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap InnerPanelLayoutMode2 {
            get {
                object obj = ResourceManager.GetObject("InnerPanelLayoutMode2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Invoice {
            get {
                object obj = ResourceManager.GetObject("Invoice", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Item {
            get {
                object obj = ResourceManager.GetObject("Item", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap KeepAspectRatio1 {
            get {
                object obj = ResourceManager.GetObject("KeepAspectRatio1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap KeepAspectRatio2 {
            get {
                object obj = ResourceManager.GetObject("KeepAspectRatio2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Ln {
            get {
                object obj = ResourceManager.GetObject("Ln", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MagnifierBorderBackground {
            get {
                object obj = ResourceManager.GetObject("MagnifierBorderBackground", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MagnifierCircle {
            get {
                object obj = ResourceManager.GetObject("MagnifierCircle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MagnifierCustom {
            get {
                object obj = ResourceManager.GetObject("MagnifierCustom", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MagnifierDark {
            get {
                object obj = ResourceManager.GetObject("MagnifierDark", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MagnifierRectangle {
            get {
                object obj = ResourceManager.GetObject("MagnifierRectangle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MagnifierRoundedRectangle {
            get {
                object obj = ResourceManager.GetObject("MagnifierRoundedRectangle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap mainvisual {
            get {
                object obj = ResourceManager.GetObject("mainvisual", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap map {
            get {
                object obj = ResourceManager.GetObject("map", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap menuheader {
            get {
                object obj = ResourceManager.GetObject("menuheader", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap mescius_logo {
            get {
                object obj = ResourceManager.GetObject("mescius_logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;NwindDataSet xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot;&gt;
        ///  &lt;xs:schema id=&quot;NwindDataSet&quot; targetNamespace=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:mstns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot; xmlns:msprop=&quot;urn:schemas-microsoft-com:xml-msprop&quot; attributeFormDefault=&quot;qualified&quot; elementFormDefault=&quot;qualified&quot;&gt;
        ///    &lt;xs:element nam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MonthlySalesByCategory {
            get {
                return ResourceManager.GetString("MonthlySalesByCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Pen {
            get {
                object obj = ResourceManager.GetObject("Pen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon product {
            get {
                object obj = ResourceManager.GetObject("product", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap product_logo {
            get {
                object obj = ResourceManager.GetObject("product_logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap progress {
            get {
                object obj = ResourceManager.GetObject("progress", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;NwindDataSet xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot;&gt;
        ///  &lt;xs:schema id=&quot;NwindDataSet&quot; targetNamespace=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:mstns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot; xmlns:msprop=&quot;urn:schemas-microsoft-com:xml-msprop&quot; attributeFormDefault=&quot;qualified&quot; elementFormDefault=&quot;qualified&quot;&gt;
        ///    &lt;xs:element nam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QuarterlySalesByCategory {
            get {
                return ResourceManager.GetString("QuarterlySalesByCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Referesh {
            get {
                object obj = ResourceManager.GetObject("Referesh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Reg {
            get {
                object obj = ResourceManager.GetObject("Reg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap remove_filter {
            get {
                object obj = ResourceManager.GetObject("remove_filter", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;Reports&gt;
        ///  &lt;!--Report *** 01: Alternating Background (Greenbar report) ***--&gt;
        ///  &lt;Report version=&quot;2.5.20072.239&quot;&gt;
        ///    &lt;Name&gt;Alternating Background&lt;/Name&gt;
        ///    &lt;ReportInfo /&gt;
        ///    &lt;DataSource&gt;
        ///      &lt;ConnectionString&gt;Provider=Microsoft.Jet.OLEDB.4.0;Data Source=|DataDirectory|C1Demo.mdb;Persist Security Info=False&lt;/ConnectionString&gt;
        ///      &lt;RecordSource&gt;SELECT Categories.*, Products.*
        ///FROM Categories INNER JOIN Products ON Categories.CategoryID = Products.CategoryID;
        ///&lt;/RecordSour [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Reports {
            get {
                return ResourceManager.GetString("Reports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Seikyu2 {
            get {
                object obj = ResourceManager.GetObject("Seikyu2", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap separator {
            get {
                object obj = ResourceManager.GetObject("separator", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SL {
            get {
                object obj = ResourceManager.GetObject("SL", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;NwindDataSet xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot;&gt;
        ///  &lt;xs:schema id=&quot;NwindDataSet&quot; targetNamespace=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:mstns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot; xmlns:msprop=&quot;urn:schemas-microsoft-com:xml-msprop&quot; attributeFormDefault=&quot;qualified&quot; elementFormDefault=&quot;qualified&quot;&gt;
        ///    &lt;xs:element nam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TotalSalesByCategory {
            get {
                return ResourceManager.GetString("TotalSalesByCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap touchKeyboard {
            get {
                object obj = ResourceManager.GetObject("touchKeyboard", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap trialbutton {
            get {
                object obj = ResourceManager.GetObject("trialbutton", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap twittericon {
            get {
                object obj = ResourceManager.GetObject("twittericon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Vend {
            get {
                object obj = ResourceManager.GetObject("Vend", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap warning {
            get {
                object obj = ResourceManager.GetObject("warning", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap with {
            get {
                object obj = ResourceManager.GetObject("with", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap without {
            get {
                object obj = ResourceManager.GetObject("without", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap world {
            get {
                object obj = ResourceManager.GetObject("world", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot;?&gt;
        ///&lt;NwindDataSet xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot;&gt;
        ///  &lt;xs:schema id=&quot;NwindDataSet&quot; targetNamespace=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:mstns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns=&quot;http://tempuri.org/NwindDataSet.xsd&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot; xmlns:msprop=&quot;urn:schemas-microsoft-com:xml-msprop&quot; attributeFormDefault=&quot;qualified&quot; elementFormDefault=&quot;qualified&quot;&gt;
        ///    &lt;xs:element nam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string YearlySalesByCategory {
            get {
                return ResourceManager.GetString("YearlySalesByCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Viewer is ActiveReports’s content control, its content area can’t zoom, ActiveReportsZoomPolicy ensure anywhere in Viewer can zoom..
        /// </summary>
        internal static string ZoomPolicy_AR_ActiveReports {
            get {
                return ResourceManager.GetString("ZoomPolicy_AR_ActiveReports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1CalendarZoomPolicy supports C1Calendar’s zooming behavior, when you zoom C1Calendar, the C1CalendarZoomPolicy can give you the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_C1_C1Calendar {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1Calendar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1ChartZoomPolicy provides ability to change special properties of C1Chart, such as the following.
        ///Font
        ///Size
        ///ChartLabel
        ///ChartArea
        ///Axis
        ///PlotArea
        ///So that, you can get the best zoom result when zoom C1Chart by C1ChartZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_C1_C1Chart {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1Chart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1Chart3DZoomPolicy provides ability to support C1Chart3D’s zooming behavior that you can get the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_C1_C1Chart3D {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1Chart3D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you change Font or Size property&apos;s default value of C1DockingTab, you can get the best zoom result by using C1DockingTabZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_C1_C1DockingTab {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1DockingTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you change C1FlexGrid.Colunm.Width, C1FlexGrid.Row.Height, C1FlexGrid.Font, and C1FlexGrid.Size value, add C1FlexGridZoomPolicy in your application can help you get a better zoom result..
        /// </summary>
        internal static string ZoomPolicy_C1_C1FlexGrid {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1FlexGrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1NavBarZoomPolicy provides ability to support C1NavBar’s zooming behavior..
        /// </summary>
        internal static string ZoomPolicy_C1_C1NavBar {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1NavBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you change Font or Size property&apos;s default value of C1OutBar,  you can get the best zoom result by using C1OutBarZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_C1_C1OutBar {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1OutBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you change C1PrintPreviewControl.Font value, add C1ReportZoomPolicy can make sure that every elements in C1PrintPreviewControl will zoom correctly..
        /// </summary>
        internal static string ZoomPolicy_C1_C1PrintPreviewControl {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1PrintPreviewControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you do zoom operation, C1Ribbon’s Font can be zoom, but Size can’t be zoom. So C1Ribbon’s Font can’t be shown completely after zoom. MultiTouch for Windows Forms provides C1RibbonZoomPolicy to make sure that C1Ribbon’s Font and Size don’t change, they always display original Font and Size..
        /// </summary>
        internal static string ZoomPolicy_C1_C1Ribbon {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1Ribbon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1ScheduleZoomPolicy supports C1Schedule’s zooming behavior, when you zoom C1Schedule, the C1ScheduleZoomPolicy can give you the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_C1_C1Schedule {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1Schedule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you do zoom operation, C1StatusBar’s Font can be zoom, but Size can’t be zoom. So C1StatusBar’s Font can’t be shown completely after zoom. MultiTouch for Windows Forms provides C1StatusBarZoomPolicy to make sure that C1StatusBar’s Font and Size don’t change, they always display original Font and Size..
        /// </summary>
        internal static string ZoomPolicy_C1_C1StatusBar {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1StatusBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1TrueDBGridZoomPolicy changes C1TrueDBGrid.CellTipsWidth, C1TrueDBGrid.DefColWidth, C1TrueDBGrid.RecordSelectorWidth, or some other properties value, so you can get the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_C1_C1TrueDBGrid {
            get {
                return ResourceManager.GetString("ZoomPolicy_C1_C1TrueDBGrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcCharMaskZoomPolicy make sure that you can get the best zoom result when you change GcCharMask.CharBoxes.Size, GcCharMask.CharBoxSpacing, GcCharMask.CharBoxes.Font value..
        /// </summary>
        internal static string ZoomPolicy_IM_GcCharMask {
            get {
                return ResourceManager.GetString("ZoomPolicy_IM_GcCharMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You may change GcComboBox.SideButtons.ButtonWidth, GcComboBox.DropDownMaxHeight, GcComboBox.DropDown.Size value, in order to get the best zoom result, you need add GcComboBoxZoomPolicy in your application..
        /// </summary>
        internal static string ZoomPolicy_IM_GcComboBox {
            get {
                return ResourceManager.GetString("ZoomPolicy_IM_GcComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MultiTouch Toolkit provides GcDateTimeZoomPolicy so that you can get the best zoom result when you change GcDateTime.DropDownCalendar.Font value..
        /// </summary>
        internal static string ZoomPolicy_IM_GcDateTime {
            get {
                return ResourceManager.GetString("ZoomPolicy_IM_GcDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If GcListBox.ItemTemplates.AutoItemHeihgt value is False and GcListBox.ItemTemplates.Height value changed, add GcListBoxZoomPolicy can help you get the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_IM_GcListBox {
            get {
                return ResourceManager.GetString("ZoomPolicy_IM_GcListBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcMaskZoomPolicy can help you get the best zoom result when you change GcMask.SideButtons.ButtonWidth, GcMask.SideButtons.DropDown.Size, GcMask.SideButtons.MaskPatternField.Font value..
        /// </summary>
        internal static string ZoomPolicy_IM_GcMask {
            get {
                return ResourceManager.GetString("ZoomPolicy_IM_GcMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change some propeties value, such as
        ///GcNumber.DisplayFields[i].Font
        ///GcNumber.DropDownCalculator.OutputHeight
        ///GcNumber.Fields[i].Font
        ///GcNumber.SideButtons[i].ButtonWidth
        ///GcNumber.PopUpCalculator.Font
        ///and so on, may cause zoom result error, you can get a better zoom result by using GcNumberZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_IM_GcNumber {
            get {
                return ResourceManager.GetString("ZoomPolicy_IM_GcNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MultiTouch for Windows Forms provides GcTextBoxZoomPolicy, the policy can help you get the best zoom result when you set GcTextBox.MultiLine value is True and change GcTextBox.DropDownEditor.Font value..
        /// </summary>
        internal static string ZoomPolicy_IM_GcTextBox {
            get {
                return ResourceManager.GetString("ZoomPolicy_IM_GcTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcTimeSpan’s following properties can’t be zoom, you can add GcTimeSpanZoomPolicy to make sure that all elements in GcTimeSpan can be zoom.
        ///GcTimeSpan.SideButtons[i].ButtonWidth
        ///GcTimeSpan.Fields[i].Font
        ///GcTimeSpan.DisplayFields[i].Font.
        /// </summary>
        internal static string ZoomPolicy_IM_GcTimeSpan {
            get {
                return ResourceManager.GetString("ZoomPolicy_IM_GcTimeSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RasterImageListZoomPolicy make sure every images could be zoomed when you zooming..
        /// </summary>
        internal static string ZoomPolicy_LT_RasterImageList {
            get {
                return ResourceManager.GetString("ZoomPolicy_LT_RasterImageList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RasterImageViewerZoomPolicy change the RasterImageViewer.ScaleFactor to get a better zoom result..
        /// </summary>
        internal static string ZoomPolicy_LT_RasterImageViewer {
            get {
                return ResourceManager.GetString("ZoomPolicy_LT_RasterImageViewer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If GcAccordionContainer.ItemSpace and GcAccordionContainer.HeaderSettings.Font changed, you can add GcAccordionContainerPolicy to get the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcAccordionContainer {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcAccordionContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If GcBarCode.AdjustSize value is False, GcBarCodeZoomPolicy moves GcBarCode to the center of the blank space..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcBarCode {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcBarCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you set GcCalculator.ShowOutput value is True and GcCalculator.OutputHeight value is bigger than 0, GcCalculatorZoomPolicy can help you to get a better zoom result..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcCalculator {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcCalculator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you change some properties value as below, such as
        ///GcCalendar.HeaderHeight
        ///GcCalendar.InnerSpace
        ///GcCalendar.NavigatorButtonSize
        ///GcCalendar.DefaultNoteStyle.ImageSize
        ///GcCalendar.ControlStyle.Font
        ///GcCalendar.TitleStyle.Font
        ///GcCalendar.WeekNumberStyle.Font
        ///and so on, PlusPakCalendarZoomPolicy can make sure that you will get a better zoom result..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcCalendar {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcCalendar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcCheckBoxZoomPolicy will give you the best zoom result when you set GcCheckBox.CheckMarkAutoSize value is False and change GcCheckBox.CheckMarkSize value..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcCheckBox {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you set GcClassicFunctionKey.ButtonWidth, or ButtonHeight, or ColumnSpacing, or GroupSpacing, or RowSpacing, you can get the best zoom result by using GcClassicFunctionKeyZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcClassicFunctionKey {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcClassicFunctionKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you set GcComboFrame.DropDownSettings.AutoSize value  is False and change GcComboFrame.DropDownSettings.Size value, you can add GcComboFrameZoomPolicy to get a better zoom result..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcComboFrame {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcComboFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When GcContainer.ApplyCaptionFormat property is All, you change GcContainer.CaptionFormat.Size, GcContainer.CaptionFormat.Spacing, GcContainer.CaptionFormat.Font value, or when GcContainer.ApplyCaptionFormat is Individual, you change Controls[i].CaptionFormat.Size, Controls[i].CaptionFormat.Size, Controls[i].CaptionFormat.Font value, GcContainerPolicy is able to help you get the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcContainer {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If GcDropDownButton.DropDown isn’t null, when you zoom, DropDown’s Font can’t zoom as DropDownButton’s Font. GcDropDownButtonZoomPolicy can help you solve this issue..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcDropDownButton {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcDropDownButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After zoom, GcFlowLayoutContainer’s layout may uncorrectly when you set CaptionText to the children, you can get a better zoom result by using GcFlowLayoutContainerZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcFlowLayoutContainer {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcFlowLayoutContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you set GcFontPicker.DropDownSettings.Size, ItemStyle.FontSize, you can get the best zoom result by using GcFontPickerZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcFontPicker {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcFontPicker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcFunctionKeyZoomPolicy will change GcFunctionKey.Font and GcFunctionKey.Size when you zoom GcFunctionKey, so you can get the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcFunctionKey {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcFunctionKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supports for the GcCheckedGroupBox, GcRadioGroupBoxChange and so on, if you change this type controls’s .CheckMarkSize, HorizontalSpace or VerticalSpace value, you’d better add GcGroupBoxControlPolicy to get a better zoom result..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcGroupBoxBase {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcGroupBoxBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GcHeadingContainerZoomPolicy will change GcHeadingContainer.DesignSize and GcHeadingContainer.HeaderSettings.Font so that you can get the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcHeadingContainer {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcHeadingContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you set GcRadioButton.CheckMarkAutoSize value is False and change GcRadioButton.CheckMarkSize value, you can get the best zoom result by using GcRadioButtonZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcRadioButton {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If GcResizePanel.ResizeMode is None, GcResizePanelZoomPolicy will give you a better zoom result..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcResizePanel {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcResizePanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you set GcShapeButton’s Default Image, Normal Image,Active Image, Hover Image or other Image properties, the image could not be zoomed, but the text will be zoomed by the font of parent. So GcShapeButtonZoomPolicy will keep GcShapeButton.Font.Size have no change so that you can get a better zoom result..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcShapeButton {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcShapeButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If GcSplitButton.DropDownButtonWidth is not default value, you can get the best zoom result by using GcSplitButtonZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcSplitButton {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcSplitButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you set GcTabControl&apos;s TabsHeight, TabSpace, CloseButtonSize  and other properties for layout, you can get the best zoom result by using GcRadioButtonZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcTabControl {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcTabControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you set TableColumn.SizeType or TableRow.SizeType value is Absolute, add GcTableLayoutContainerPolicy can help you to get the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcTableLayoutContainer {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcTableLayoutContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you set the Font or ItemSize of GcTabControl&apos;s HotTrackStyle, SelectedStyle or TabStyle, you can get the best zoom result by using GcRadioButtonZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_PPK_GcTabPage {
            get {
                return ResourceManager.GetString("ZoomPolicy_PPK_GcTabPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the count of FpSpread.Sheets is bigger than 1, only current shown sheet can be zoomed, other sheets have no change, SpreadZoomPolicy can make all sheets can be zoomed no matter which sheet is current shown sheet..
        /// </summary>
        internal static string ZoomPolicy_Spread {
            get {
                return ResourceManager.GetString("ZoomPolicy_Spread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox will select all text when ComboBox.Font and ComboBox.Size change, ComboBoxZoomPolicy is used to disable this default behavior..
        /// </summary>
        internal static string ZoomPolicy_Strd_ComboBox {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_ComboBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MultiTouch Toolkit provides DataGridViewZoomPolicy to get a better zoom result for DataGridView. It can zoom the Size and Font for all Columns, Rows, or Cells..
        /// </summary>
        internal static string ZoomPolicy_Strd_DataGridView {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_DataGridView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First, zoom in Form, then zoom out Form to 100%, controls’s layout maybe uncorrectly, FlowLayoutPanelZoomPolicy can make sure that controls’s layout correctly at any time..
        /// </summary>
        internal static string ZoomPolicy_Strd_FlowLayoutPanel {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_FlowLayoutPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ListBoxZoomPolicy ensure that ListBox.ColumnWidth value change when ListBox.MultiColumn is True and ListBox.CloumnWidth is bigger than 0..
        /// </summary>
        internal static string ZoomPolicy_Strd_ListBox {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_ListBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ListView.Font and ListView.Columns[i].Width will be changed while zooming because of MultiTouch Toolkit provides ListViewZoomPolicy..
        /// </summary>
        internal static string ZoomPolicy_Strd_ListView {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_ListView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MonthCalendar.Font and MonthCalendar.Size always remain unchanged. MonthCanlendarZoomPolicy will move MonthCalendar to the center of the blank space..
        /// </summary>
        internal static string ZoomPolicy_Strd_MonthCalendar {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_MonthCalendar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PictureBoxZoomPolicy makes PictureBox zoom result better when PictureBox.SizeMode isn’t Zoom and zoomfactor is bigger than 1f..
        /// </summary>
        internal static string ZoomPolicy_Strd_PictureBox {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_PictureBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PropertyGrid’s bounds, font and layout’s zoom result may uncorrectly sometimes, PropertyGridZoomPolicy gives you a better zoom result..
        /// </summary>
        internal static string ZoomPolicy_Strd_PropertyGrid {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_PropertyGrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you do zoom operation, SplitContainerZoomPolicy changes SplitContainer.SplitLineWidth and SplitContainer.SplitterDistance property value, so you can get the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_Strd_SplitContainer {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_SplitContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If TableLayoutPanel&apos;s ColumnStyle.SizeType or RowStyle.SizeType proeprty value is Absolute, change Size of TableLayoutPanel, ColumnStyle.Width and RowStyle.Height do not change. TableLayoutPanelZoomPolicy will help you change Column.Width and Row.Height in this case..
        /// </summary>
        internal static string ZoomPolicy_Strd_TableLayoutPanel {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_TableLayoutPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, ToolStrip’s font can not zoom, ToolStripZoomPolicy can help you get the best zoom result..
        /// </summary>
        internal static string ZoomPolicy_Strd_ToolStrip {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_ToolStrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If TreeView’s following property value are not default value, change TreeView.Size or TreeView.Font do not cause these property value change. TreeViewZoomPolicy will help you change these value in this case..
        /// </summary>
        internal static string ZoomPolicy_Strd_TreeView {
            get {
                return ResourceManager.GetString("ZoomPolicy_Strd_TreeView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visual Basic Power Packs is a Visual Basic 6.0 compatibility feature provided by Microsoft.
        ///MultiTouch for Windows Forms provides VisualBasicPowerPacksZoomPolicy to support LineShape, OvalShape and RectangleShape’s zooming behavior..
        /// </summary>
        internal static string ZoomPolicy_VisualBasicPowerPacks {
            get {
                return ResourceManager.GetString("ZoomPolicy_VisualBasicPowerPacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WPF Interoperability is a technology of using Windows Presentation Foundation (WPF) in a Windows Forms project. 
        ///MultiTouch for Windows Forms provides WPF_ElementHostZoomPolicy to support ElementHost’s zooming behavior..
        /// </summary>
        internal static string ZoomPolicy_WPF_ElementHost {
            get {
                return ResourceManager.GetString("ZoomPolicy_WPF_ElementHost", resourceCulture);
            }
        }
    }
}
