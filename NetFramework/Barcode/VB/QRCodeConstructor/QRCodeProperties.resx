<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="C1SuperTooltip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="Label6.ToolTip" xml:space="preserve">
    <value>&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;Contrast Display&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;parm&gt;&lt;hr noshade size=1 style='margin:2' color=darker&gt;&lt;/parm&gt;
&lt;div style='margin:1 12'&gt;&lt;parm&gt;
  This square displays how the fore and &lt;br&gt;
back colours contrast against each&lt;br&gt;
other.  The greater the contrast the more&lt;br&gt;
likely it is that the code will be read.
&lt;/parm&gt;&lt;/div&gt;
&lt;parm&gt;&lt;/parm&gt;
&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;</value>
  </data>
  <data name="cmbErrorCorrectionLevel.DataSource" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAE5TeXN0ZW0uRGF0YSwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
        PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAABVTeXN0ZW0uRGF0YS5E
        YXRhVGFibGUDAAAAGURhdGFUYWJsZS5SZW1vdGluZ1ZlcnNpb24JWG1sU2NoZW1hC1htbERpZmZHcmFt
        AwEBDlN5c3RlbS5WZXJzaW9uAgAAAAkDAAAABgQAAAD1Azw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rp
        bmc9InV0Zi0xNiI/Pg0KPHhzOnNjaGVtYSB4bWxucz0iIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5v
        cmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOm1zZGF0YT0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp4
        bWwtbXNkYXRhIj4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iVGFibGUxIj4NCiAgICA8eHM6Y29tcGxleFR5
        cGU+DQogICAgPC94czpjb21wbGV4VHlwZT4NCiAgPC94czplbGVtZW50Pg0KICA8eHM6ZWxlbWVudCBu
        YW1lPSJ0bXBEYXRhU2V0IiBtc2RhdGE6SXNEYXRhU2V0PSJ0cnVlIiBtc2RhdGE6TWFpbkRhdGFUYWJs
        ZT0iVGFibGUxIiBtc2RhdGE6VXNlQ3VycmVudExvY2FsZT0idHJ1ZSI+DQogICAgPHhzOmNvbXBsZXhU
        eXBlPg0KICAgICAgPHhzOmNob2ljZSBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIiAv
        Pg0KICAgIDwveHM6Y29tcGxleFR5cGU+DQogIDwveHM6ZWxlbWVudD4NCjwveHM6c2NoZW1hPgYFAAAA
        gAE8ZGlmZmdyOmRpZmZncmFtIHhtbG5zOm1zZGF0YT0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp4
        bWwtbXNkYXRhIiB4bWxuczpkaWZmZ3I9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206eG1sLWRpZmZn
        cmFtLXYxIiAvPgQDAAAADlN5c3RlbS5WZXJzaW9uBAAAAAZfTWFqb3IGX01pbm9yBl9CdWlsZAlfUmV2
        aXNpb24AAAAACAgICAIAAAAAAAAA//////////8L
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmbErrorCorrectionLevel.Images" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAkAAAAJCAYAAADgkQYQAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAASdAAA
        EnQB3mYfeAAAADdJREFUKFNjYMAE/7GIgYWQJXCxURTCFOE1ESSJoQAmiI9GcSayQqzuR3cLVithOvH6
        DpsisBgAoKoc5C8W7oEAAAAASUVORK5CYII=
</value>
  </data>
  <data name="cmbErrorCorrectionLevel.PropBag" xml:space="preserve">
    <value>&lt;?xml version="1.0"?&gt;&lt;Blob&gt;&lt;Styles type="C1.Win.C1List.Design.ContextWrapper"&gt;&lt;Data&gt;Style6{}EvenRow{BackColor:Aqua;}Group{Border:None,,0, 0, 0, 0;AlignVert:Center;BackColor:ControlDark;}Heading{AlignVert:Center;Border:Raised,,1, 1, 1, 1;ForeColor:ControlText;BackColor:Control;Wrap:True;}Style9{AlignHorz:Near;}OddRow{}Style1{}Style5{}Style11{}Selected{ForeColor:WindowText;BackColor:239, 239, 247;}Style8{}Style2{}Style4{}HighlightRow{ForeColor:HighlightText;BackColor:Highlight;}RecordSelector{AlignImage:Center;}Normal{}Style3{}Style7{}Caption{AlignHorz:Center;}Footer{}Style10{}Inactive{ForeColor:InactiveCaptionText;BackColor:InactiveCaption;}&lt;/Data&gt;&lt;/Styles&gt;&lt;Splits&gt;&lt;C1.Win.C1List.ListBoxView AllowColSelect="False" Name="Split[0,0]" CaptionHeight="17" ColumnCaptionHeight="17" ColumnFooterHeight="17" ExtendRightColumn="True" DefRecSelWidth="21" VerticalScrollGroup="1" HorizontalScrollGroup="1"&gt;&lt;ClientRect&gt;0, 0, 116, 156&lt;/ClientRect&gt;&lt;Height&gt;156&lt;/Height&gt;&lt;BorderSide&gt;Right&lt;/BorderSide&gt;&lt;VScrollBar&gt;&lt;Width&gt;17&lt;/Width&gt;&lt;/VScrollBar&gt;&lt;HScrollBar&gt;&lt;Height&gt;17&lt;/Height&gt;&lt;/HScrollBar&gt;&lt;CaptionStyle parent="Style2" me="Style9" /&gt;&lt;EvenRowStyle parent="EvenRow" me="Style7" /&gt;&lt;FooterStyle parent="Footer" me="Style3" /&gt;&lt;GroupStyle parent="Group" me="Style11" /&gt;&lt;HeadingStyle parent="Heading" me="Style2" /&gt;&lt;HighLightRowStyle parent="HighlightRow" me="Style6" /&gt;&lt;InactiveStyle parent="Inactive" me="Style4" /&gt;&lt;OddRowStyle parent="OddRow" me="Style8" /&gt;&lt;RecordSelectorStyle parent="RecordSelector" me="Style10" /&gt;&lt;SelectedStyle parent="Selected" me="Style5" /&gt;&lt;Style parent="Normal" me="Style1" /&gt;&lt;/C1.Win.C1List.ListBoxView&gt;&lt;/Splits&gt;&lt;NamedStyles&gt;&lt;Style parent="" me="Normal" /&gt;&lt;Style parent="Normal" me="Heading" /&gt;&lt;Style parent="Heading" me="Footer" /&gt;&lt;Style parent="Heading" me="Caption" /&gt;&lt;Style parent="Heading" me="Inactive" /&gt;&lt;Style parent="Normal" me="Selected" /&gt;&lt;Style parent="Normal" me="HighlightRow" /&gt;&lt;Style parent="Normal" me="EvenRow" /&gt;&lt;Style parent="Normal" me="OddRow" /&gt;&lt;Style parent="Heading" me="RecordSelector" /&gt;&lt;Style parent="Caption" me="Group" /&gt;&lt;/NamedStyles&gt;&lt;vertSplits&gt;1&lt;/vertSplits&gt;&lt;horzSplits&gt;1&lt;/horzSplits&gt;&lt;Layout&gt;Modified&lt;/Layout&gt;&lt;DefaultRecSelWidth&gt;21&lt;/DefaultRecSelWidth&gt;&lt;/Blob&gt;</value>
  </data>
  <data name="Label5.ToolTip" xml:space="preserve">
    <value>&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;Error Correction Level&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;parm&gt;&lt;hr noshade size=1 style='margin:2' color=darker&gt;&lt;/parm&gt;
&lt;div style='margin:1 12'&gt;&lt;parm&gt;
  QR codes have error correction levels&lt;br&gt;
designed to allow for a degree of error&lt;br&gt;
in the device reading the code.&lt;br&gt;
&lt;br&gt;
By default error correction is set to the &lt;br&gt;
lowest level (L) which has the effect of&lt;br&gt;
producing less dense codes.&lt;br&gt;
&lt;br&gt;
The Highest level (H) will produce more&lt;br&gt;
dense codes but has a 30% error &lt;br&gt;
correction rate.  This can be useful if &lt;br&gt;
you intend to embed additional images &lt;br&gt;
in the code.
&lt;/parm&gt;&lt;/div&gt;
&lt;parm&gt;&lt;/parm&gt;
&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;</value>
  </data>
  <data name="Label4.ToolTip" xml:space="preserve">
    <value>&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;Code Version&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;parm&gt;&lt;hr noshade size=1 style='margin:2' color=darker&gt;&lt;/parm&gt;
&lt;div style='margin:1 12'&gt;&lt;parm&gt;
  This allows you to manually set the &lt;br&gt;
version to which the code will be &lt;br&gt;
compiled.  You cannot select a version &lt;br&gt;
greater than that currently supported&lt;br&gt;
by the code generator.&lt;br&gt;
&lt;br&gt;
NB:&lt;br&gt;
It is best to leave this set to 0 as that &lt;br&gt;
will automatically select the best&lt;br&gt;
version for the code you are creating.
&lt;/parm&gt;&lt;/div&gt;
&lt;parm&gt;&lt;/parm&gt;
&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;</value>
  </data>
  <data name="Label3.ToolTip" xml:space="preserve">
    <value>&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;Symbol Size&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;parm&gt;&lt;hr noshade size=1 style='margin:2' color=darker&gt;&lt;/parm&gt;
&lt;div style='margin:1 12'&gt;&lt;parm&gt;
  This determines the size of the pixels&lt;br&gt;
that will be used to make up the code.&lt;br&gt;
The greater the number, the bigger the&lt;br&gt;
code will be.&lt;br&gt;
&lt;br&gt;
The maximum you can select is 10, the&lt;br&gt;
minimum is 2.  A selection within the &lt;br&gt;
range 3 - 5 is likely to produce the most&lt;br&gt;
acceptable results.
&lt;/parm&gt;&lt;/div&gt;
&lt;parm&gt;&lt;/parm&gt;
&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;</value>
  </data>
  <data name="Label2.ToolTip" xml:space="preserve">
    <value>&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;Back Colour&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;parm&gt;&lt;hr noshade size=1 style='margin:2' color=darker&gt;&lt;/parm&gt;
&lt;div style='margin:1 12'&gt;&lt;parm&gt;
  This allows you to set the ack colour of&lt;br&gt;
the QR Code.&lt;br&gt;
&lt;br&gt;
You can access the colour picker dialog&lt;br&gt;
by clicking the button on the right.
&lt;/parm&gt;&lt;/div&gt;
&lt;parm&gt;&lt;/parm&gt;
&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;</value>
  </data>
  <data name="Label1.ToolTip" xml:space="preserve">
    <value>&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;Fore Colour&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;parm&gt;&lt;hr noshade size=1 style='margin:2' color=darker&gt;&lt;/parm&gt;
&lt;div style='margin:1 12'&gt;&lt;parm&gt;
  This sets the colour of the actual code.&lt;br&gt;
In most instances you will probably want&lt;br&gt;
this to be Black, but there may be &lt;br&gt;
occasions when another colour will better&lt;br&gt;
suit your intended use for the code.&lt;br&gt;
&lt;br&gt;You should try and ensure that if you &lt;br&gt;
change the fore colour that any back colour&lt;br&gt;
you select provides as great a contrast as &lt;br&gt;
possible.  The Contrast display box should&lt;br&gt;
help you to determine that you have &lt;br&gt;
made the correct choice.&lt;br&gt;&lt;br&gt;
You can access the colour picker dialog&lt;br&gt;
by clicking the button on the right.
&lt;/parm&gt;&lt;/div&gt;
&lt;parm&gt;&lt;/parm&gt;
&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;</value>
  </data>
  <data name="C1SplitterPanel1.ToolTip" xml:space="preserve">
    <value>&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;Properties to Set&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;parm&gt;&lt;hr noshade size=1 style='margin:2' color=darker&gt;&lt;/parm&gt;
&lt;div style='margin:1 12'&gt;&lt;parm&gt;
  Here you can set properties to act as the defaults&lt;br&gt;
for all of the QR Codes that you create with the QR &lt;br&gt;
Code Builder.&lt;br&gt;
&lt;br&gt;
Run you mouse over the description labels for each&lt;br&gt;
of the properties that you can set for an explanation&lt;br&gt;
of what they actually do and how they affect the code &lt;br&gt;
you build.
&lt;/parm&gt;&lt;/div&gt;
&lt;parm&gt;&lt;/parm&gt;
&lt;table&gt;&lt;tr&gt;
  &lt;td&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/td&gt;
  &lt;td&gt;&lt;b&gt;&lt;parm&gt;&lt;/parm&gt;&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;</value>
  </data>
</root>