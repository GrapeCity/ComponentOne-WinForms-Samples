Imports System.Data
Imports System.Data.SqlClient
Imports System.IO
Imports System.Dynamic
Imports C1.Win.FlexPivot
Imports C1.FlexPivot
Imports C1.DataEngine
Imports System.Globalization

Public Class Form1
    Private conn As SqlConnection
    Private tables As New List(Of Object)()
    Private dataPath As String = Path.Combine(System.Windows.Forms.Application.StartupPath, "Data")

    ' default unreferenced output fields
    Private selectedFields As String() = New String() {
        "Orders\Customer\Customers\Company",
        "Orders\Customer\Customers\Country",
        "Orders\\Employee\\Employees\\Title"}

    Public Sub New()
        ' designer support
        InitializeComponent()

        ' connect to sample data
        conn = New SqlConnection(GetConnectionString())
        conn.Open()

        ' where DataEngine data is stored
        _c1FlexPivotPage.FlexPivotPanel.Workspace.Init(dataPath)

        ' create DataEngine tables
        tables.Add(GetData("Orders", My.Resources.SqlOrders))
        tables.Add(GetData("Customers", My.Resources.SqlCustomers))
        tables.Add(GetData("Employees", My.Resources.SqlEmployees))
    End Sub

    ' joins tables
    Private Sub btnJoin_Click(sender As Object, e As EventArgs) Handles btnJoin.Click
        Using frm As New FormJoin()
            frm.Tables = tables.ToArray()
            ' restore previously selected fileds
            frm.SelectedFields = selectedFields
            If frm.ShowDialog(Me) = DialogResult.OK Then
                selectedFields = frm.SelectedFields
                ' clear previous join result
                _c1FlexPivotPage.FlexPivotPanel.Workspace.Clear("join")
                ' join tables
                Dim join As Object = _c1FlexPivotPage.FlexPivotPanel.Workspace.join("join", tables(0), frm.JoinSettings)
                join.Query.Execute()
                ' connect joined data to C1FlexPivot
                _c1FlexPivotPage.FlexPivotPanel.ConnectDataEngine("join")
                ' update C1FlexPivot view
                OnSetData()
            End If
        End Using
    End Sub

    ' creates DataEngine table
    Private Function GetData(name As String, sql As String) As Object
        Dim connector As New C1.DataEngine.DbConnector(_c1FlexPivotPage.FlexPivotPanel.Workspace, conn)
        connector.Command = New SqlCommand(sql)
        connector.GetData(name)
        Return _c1FlexPivotPage.FlexPivotPanel.Workspace.table(name)
    End Function

    ' initializes or restores pivot view
    Private Sub OnSetData()
        ' fill lookups
        FillLookup("Country", My.Resources.SqlLookupCountry)
        FillLookup("Company", My.Resources.SqlLookupCustomer)
        FillLookup("Employee", My.Resources.SqlLookupEmployee)
        ' set default C1FlexPivot view
        _c1FlexPivotPage.FlexPivotEngine.ShowTotalsRows = ShowTotals.Subtotals
        Dim field As C1FlexPivotField = GetField("OrderID")
        If field IsNot Nothing Then
            field.Subtotal = Subtotal.Count
            _c1FlexPivotPage.FlexPivotEngine.ValueFields.Add(field)
        End If
        field = GetField("Country")
        If field IsNot Nothing Then _c1FlexPivotPage.FlexPivotEngine.RowFields.Add(field)
        field = GetField("Company")
        If field IsNot Nothing Then _c1FlexPivotPage.FlexPivotEngine.RowFields.Add(field)
    End Sub

    ' fills lookup dictionary for the field from the database
    Private Sub FillLookup(fieldName As String, lookupSql As String)
        Dim field As C1FlexPivotField = GetField(fieldName)
        If field IsNot Nothing AndAlso field.Lookup Is Nothing Then
            field.Lookup = GetLookup(conn, lookupSql)
        End If
    End Sub

    ' gets a C1FlexPivotField by name
    Private Function GetField(name As String) As C1FlexPivotField
        For Each field As C1FlexPivotField In _c1FlexPivotPage.FlexPivotEngine.Fields
            If field.Name = name Then
                Return field
            End If
        Next
        Return Nothing
    End Function

    ' create a dictionary from two data columns
    Private Function GetLookup(conn As SqlConnection, command As String) As Dictionary(Of Object, String)
        Dim dict = New Dictionary(Of Object, String)()
        Dim cmd As New SqlCommand(command, conn)
        Dim reader As SqlDataReader = cmd.ExecuteReader(CommandBehavior.SequentialAccess)
        While reader.Read()
            dict.Add(reader.GetValue(0), reader.GetString(1))
        End While
        reader.Close()
        Return dict
    End Function

    ' remove data generated by the C1 DataEngine
    Protected Overrides Sub OnFormClosed(e As FormClosedEventArgs)
        _c1FlexPivotPage.FlexPivotPanel.Workspace.Clear()
        Try
            conn.Close()
        Catch
        End Try
        MyBase.OnFormClosed(e)
    End Sub

    ' get sample DB connection string
    Private Shared Function GetConnectionString() As String
        Dim key As Microsoft.Win32.RegistryKey = Microsoft.Win32.Registry.LocalMachine.OpenSubKey("SOFTWARE\Microsoft\Microsoft SQL Server Local DB\Installed Versions")
        If key Is Nothing Then
            Throw New Exception("Microsoft SQL Server LocalDB is not installed.")
        End If
        Dim version As String = "v11.0"
        For Each subKeyName In key.GetSubKeyNames()
            Dim localDBVersion As Double = 0
            If Double.TryParse(subKeyName, NumberStyles.Number, CultureInfo.InvariantCulture, localDBVersion) And localDBVersion >= 12 Then
                version = "MSSQLLocalDB"
                Exit For
            End If
        Next
        Dim path As String = Environment.GetFolderPath(Environment.SpecialFolder.Personal) & "\ComponentOne Samples\Common"
        Return String.Format("Data Source=(LocalDB)\{0};AttachDbFilename={1}\NORTHWND.MDF;Integrated Security=True;Connect Timeout=30", version, path)
    End Function

End Class
