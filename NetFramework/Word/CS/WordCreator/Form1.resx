<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAAAAADoAgAAJgAAACAgAAAAAAAAqAgAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAAAC
        AAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAd3d3AAAAAAAAAAAAAAAAB6qqd3cAAAAAAAAAAAAAAH7qAAB3
        d3d3d3AAAAAAAACucAAHeqqqqqpHcAAAAAAA7nAAd6p3d3d3eqdwAAAAAO5wB6qqqnqqqnd2RwAAAADu
        p3qqpERkREqqp6RwAAAA7qqkREREJkRERKqqRwAAAI7qpEREqiKqREREqnRwAAAO7kRKqqqiKqqkREp6
        RwAADu5KqqqqoiKqqqRKd6cAAAjuqqqqqiIiqqqqSqekcAAO7uqqqqIiIqqqqqKqdHAAB6iKqqqqIiqq
        qioiKqRwAAqoiKqqqqqqqqIiIiKqcAAKqoiKKqqq7qqiIiIiqnAACqqIiiqqru7uqiIiKipwAAqqqIgi
        Ku7u7uqiKqIqcAAOqqqIgzN+7u7uoqIiKnAAAKqqiIhzOI7u7qoiIipwAADqojgAh3eI7u6qoiKnAAAA
        qqMzgAh4CI7u6qKipwAAAAojM3AAAAiO6uqiqqcAAAAOczd4AAAHN6qqqipwAAAAAKd36IAABzOu6qqn
        cAAAAAAK53iIAAgzKqqqdwcAAAAAAKquiIiPg6qqp3AHgAAAAAAO5+iHd4h66ncAB4AAAAAAAA5uZ25o
        iHdwAAeAAAAAAAAACIjoiIAIiIiGgAAAAAAAAAAAAAAAAA5+6AAAAAAAAAAAAAAAAAAAAAAA8D///+AP
        ///DwAf/x4AB/8cAAH/GAAA/wAAAH8AAAA/AAAAH4AAAA+AAAAPgAAAB4AAAAeAAAAHgAAAB4AAAAeAA
        AAHgAAAB4AAAAfAAAAHwMAAD8BiAA/gfgAP4D4AH/AeAB/4DgAv/AAAZ/4AAOf/gAHn/+AYB////g///
        //8oAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAMDAwADA3MAA8MqmAAQEBAAICAgADAwMABEREQAWFhYAHBwcACIiIgApKSkAVVVVAE1N
        TQBCQkIAOTk5AIB8/wBQUP8AkwDWAP/szADG1u8A1ufnAJCprQAAADMAAABmAAAAmQAAAMwAADMAAAAz
        MwAAM2YAADOZAAAzzAAAM/8AAGYAAABmMwAAZmYAAGaZAABmzAAAZv8AAJkAAACZMwAAmWYAAJmZAACZ
        zAAAmf8AAMwAAADMMwAAzGYAAMyZAADMzAAAzP8AAP9mAAD/mQAA/8wAMwAAADMAMwAzAGYAMwCZADMA
        zAAzAP8AMzMAADMzMwAzM2YAMzOZADMzzAAzM/8AM2YAADNmMwAzZmYAM2aZADNmzAAzZv8AM5kAADOZ
        MwAzmWYAM5mZADOZzAAzmf8AM8wAADPMMwAzzGYAM8yZADPMzAAzzP8AM/8zADP/ZgAz/5kAM//MADP/
        /wBmAAAAZgAzAGYAZgBmAJkAZgDMAGYA/wBmMwAAZjMzAGYzZgBmM5kAZjPMAGYz/wBmZgAAZmYzAGZm
        ZgBmZpkAZmbMAGaZAABmmTMAZplmAGaZmQBmmcwAZpn/AGbMAABmzDMAZsyZAGbMzABmzP8AZv8AAGb/
        MwBm/5kAZv/MAMwA/wD/AMwAmZkAAJkzmQCZAJkAmQDMAJkAAACZMzMAmQBmAJkzzACZAP8AmWYAAJlm
        MwCZM2YAmWaZAJlmzACZM/8AmZkzAJmZZgCZmZkAmZnMAJmZ/wCZzAAAmcwzAGbMZgCZzJkAmczMAJnM
        /wCZ/wAAmf8zAJnMZgCZ/5kAmf/MAJn//wDMAAAAmQAzAMwAZgDMAJkAzADMAJkzAADMMzMAzDNmAMwz
        mQDMM8wAzDP/AMxmAADMZjMAmWZmAMxmmQDMZswAmWb/AMyZAADMmTMAzJlmAMyZmQDMmcwAzJn/AMzM
        AADMzDMAzMxmAMzMmQDMzMwAzMz/AMz/AADM/zMAmf9mAMz/mQDM/8wAzP//AMwAMwD/AGYA/wCZAMwz
        AAD/MzMA/zNmAP8zmQD/M8wA/zP/AP9mAAD/ZjMAzGZmAP9mmQD/ZswAzGb/AP+ZAAD/mTMA/5lmAP+Z
        mQD/mcwA/5n/AP/MAAD/zDMA/8xmAP/MmQD/zMwA/8z/AP//MwDM/2YA//+ZAP//zABmZv8AZv9mAGb/
        /wD/ZmYA/2b/AP//ZgAhAKUAX19fAHd3dwCGhoYAlpaWAMvLywCysrIA19fXAN3d3QDj4+MA6urqAPHx
        8QD4+PgA8Pv/AKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAoKCm1tbW1tbQoKCgoK
        CgoKCgoKCgoKCgoKCgoKCgoKCgpts7Ozs7SRbW0KCgoKCgoKCgoKCgoKCgoKCgoKCgoKbdPTswoKCgqz
        kZETExMTExMTEwoKCgoKCgoKCgoKCgqz0xMKCgoKE7SLraytra2traymExMKCgoKCgoKCgoKCtPTEwoK
        ChOLrK2tra2tra2tz8+tphMTCgoKCgoKCgoK09QTCgoTs6ytp6eGi4aGp6etra3PhmUTCgoKCgoKCgrU
        1IsTE7PHhqampqZspqampqaGp62traYTCgoKCgoKCtrUrWaspqampqampklrpqampqamhqetrWUTCgoK
        CgoKutraiqampqampqamSCdIpqampqampoatrWUTCgoKCgoK2trTpqampsfHx8dIJyeKx8empqampouu
        hmYTCgoKCgrV2tqmpsfHrKysrGsnJyeKrMfHpqambIuuhhMKCgoKCrra263HrKysrKwGAgICAkisrKzH
        pqZsbIuLZhMKCgoKs9vb26ysrKysrAICAgICa6ysrKzHiklsbItlEwoKCgqzs9vbs6ysrKysBgICTqys
        rKysSGtIJ0lsbKYTCgoKCrOs29vbrKyssgayTgbTsrKsrEgCJycnJ0lsphMKCgoKsqyz29vbsk5wcIFw
        stPT07KsTgICJycnSGymEwoKCgqyrKzb3NyQLbKysrLT09PT09OyAgICSEhISaYTCgoKCrOsrLPc3NxV
        VVV31NTU09PT09MGTkiKikhIihMKCgoKs6ysrLPc3LtVVlad29ra1NPT0wYCawInJyeKEwoKCgoK06yy
        cJgZGQiXVla629va1NPT03ACAicnSIsTCgoKCgrTrLJVVQkZGQiXVlYJ29va09NOTgZIAidrEwoKCgoK
        CrPTcVVWVhkZGQh4mOLc29rT09OyTgIGJ4oTCgoKCgoKCpBVVVZWeBkZ9PP/4hm62tSy07JwAmtrixMK
        CgoKCgoKs3dVVpd4mPP0/8LieFaWkHGysqxOAq0TCgoKCgoKCgoKs1WXlrm7CPT//+J4VlZx09OyrKyB
        tBMKCgoKCgoKCgoKs7KXnZjbwRn//whWVlWy06yssrQTCrQKCgoKCgoKCgoKs7m5uZiYu5gIGRlVcbLT
        srK0EwoKtLQKCgoKCgoKCgoKs9OWuZ2dl5eXCQl3stOztBMKCgq0tAoKCgoKCgoKCgoKCrOz1LN3s9Oz
        29zbs64TCgoKCrS0CgoKCgoKCgoKCgoKCgq0tLSztLS0tAoKurX37++1s7QKCgoKCgoKCgoKCgoKCgoK
        CgoKCgoKCgoKCrO0s7O7CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgrgf///wB///4eA
        D/+PAAP/jgAA/4wAAH+AAAA/gAAAH4AAAA/AAAAHwAAAB8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAAD4AAAA+AAAAfgAAAH8AAAB/AAAA/4AAAP/AAAF/4AADP/AABz/8AA8//wDAP///8H/////w==
</value>
  </data>
</root>