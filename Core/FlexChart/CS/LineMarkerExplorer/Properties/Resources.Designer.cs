//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LineMarkerExplorer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LineMarkerExplorer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap cb_down26 {
            get {
                object obj = ResourceManager.GetObject("cb_down26", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap cb_up26 {
            get {
                object obj = ResourceManager.GetObject("cb_up26", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap EN_Flag {
            get {
                object obj = ResourceManager.GetObject("EN_Flag", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ES_Flag {
            get {
                object obj = ResourceManager.GetObject("ES_Flag", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;samples&gt;
        ///  &lt;sample id=&quot;introduction&quot;&gt;
        ///    &lt;title&gt;Introduction&lt;/title&gt;
        ///    &lt;description&gt;This view shows [b]FlexChart[/b]&apos;s basic features. It binds the chart to a data source and allows you to select the chart type, series stacking, and rotation.
        ///If you move the mouse over a chart element, a tooltip will appear showing details about the data point.
        ///
        ///The simplest way to use FlexChart is to:
        ///
        ///1. Set the chart&apos;s [b]DataSource[/b] property to an array of data obj [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExplorerConfiguration_CH {
            get {
                return ResourceManager.GetString("ExplorerConfiguration_CH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;samples&gt;
        ///  &lt;sample id=&quot;introduction&quot;&gt;
        ///    &lt;title&gt;Introduction&lt;/title&gt;
        ///    &lt;description&gt;Represents an extension of the LineMarker for the FlexChart.
        ///
        ///The LineMarker consists of a text area with content reflecting data point values, and an optional vertical or horizontal line (or both for a cross-hair effect) positioned over the plot area. It can be static (interaction = None), follow the mouse or touch position (interaction = Move), or move when the user drags t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExplorerConfiguration_EN {
            get {
                return ResourceManager.GetString("ExplorerConfiguration_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;samples&gt;
        ///  &lt;sample id=&quot;introduction&quot;&gt;
        ///    &lt;title&gt;Introduction&lt;/title&gt;
        ///    &lt;description&gt;This view shows [b]FlexChart[/b]&apos;s basic features. It binds the chart to a data source and allows you to select the chart type, series stacking, and rotation.
        ///If you move the mouse over a chart element, a tooltip will appear showing details about the data point.
        ///
        ///The simplest way to use FlexChart is to:
        ///
        ///1. Set the chart&apos;s [b]DataSource[/b] property to an array of data obj [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExplorerConfiguration_JP {
            get {
                return ResourceManager.GetString("ExplorerConfiguration_JP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap FR_Flag {
            get {
                object obj = ResourceManager.GetObject("FR_Flag", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
